[language]

#  Determines the way the compiler expands expressions.  For C-like target languages
# this should be infix, for assembly-like languages it should be prefix.
#  Infix means that an expression like: 5 + (6-2) will have it's operands expanded
# inline.
#  Prefix means that the expression would be expanded so that every operator has
# only a single input on each side, instead of a complex branching subexpression.
expression_expansion=prefix

# Set to true if the code generator should perform pretty printing and indent adjustment.
indent_code=1

#  A one line comment in the skeleton files starts with this string.  This lets us
# be flexible about comments in the skeleton files, and still not expand the output
# overly.  Lines starting with this string will be stripped from the file on input.
one_line_comment=semicolon

#  Function parameter separator, used for joining the outbound and inbound parameter
# lists.
func_parm_sep=,

# Structure member separator, used for joining structure members
struct_mem_sep=,

#  If this is 1, the structure member separator will be placed on the end of *all*
# members, otherwise it will be placed after all members except the very last one.
struc_mem_trailing_sep=0

# Symbol for defining pointers, if any
pointer_symbol=*

# If all outbound parameters should be pointers, set to 1
outbound_are_pointers=1

# The following types are *always* pointers, regardless of whether they are inbound or outbound
always_pointers=%%type.metal_string_t %%type.metal_type_t




