;  This file contains the headers that all metal files will have when
; compiled to 'LLVM'.  This information will be dumped into the top of the
; file.
;
;  All comments are stripped from the source during transform.
;

raw_string_constant
${
@$(name) = internal constant [$(length) x $(char_type)] c"$(value)"
$}

string_constant
${
@$(name)  = internal constant %type.string_t $(initialized_string_object) 
$}

global_string_variable
${

@.$(name) = internal constant [$(length) x $(char_type)] c"$(value)"
@$(name)  = global %type.metal_string_t { $(word_type) 4294967295, $(word_type) $(length), $(char_type)* getelementptr([$(length) x $(char_type)]* @.$(name), i32 0, i32 0) }

$}


module
${

; -- Struct Definitions -- 
$(struct_definitions)
; ------------------------ 

; -- Object Definitions -- 
$(object_definitions)
; ------------------------ 

; ------ INTRINSICS USED - 
declare void @llvm.memcpy.i32(i8*, i8*, i32, i32)
declare void @llvm.memset.i32(i8*, i8, i32, i32)
declare i8* @llvm.stacksave()
declare void @llvm.stackrestore(i8*)
; ----------------------- 

; ------ Constants ------
$(constants)
; ----------------------- 

; ------ Function Declarations ------------------
$(func_declarations)
; -----------------------------------------------

; ------ Global Definitions ---------------------
$(globals)
; -----------------------------------------------

; ---------------------------------------------------------------------------------------------------------------------
; Function Code
; ---------------------------------------------------------------------------------------------------------------------
 
$(func_definitions)

$}   